{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [user, setUser] = useState([]);\n  const [callback, setCallback] = useState(false);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to cart.\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart,\n    history: [history, setHistory],\n    user: [user, setUser]\n  };\n}\n\n_s(UserAPI, \"G5VashTfrCLc+pdbhReT9Qh5ppg=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["D:/chuyên đề/Project_N/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","history","setHistory","user","setUser","callback","setCallback","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","_id","quantity","patch"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart, setCart] = useState([])\r\n    const [history, setHistory] = useState([])\r\n    const [user, setUser] = useState([])\r\n    const [callback, setCallback] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const getUser = async () => {\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: { Authorization: token }\r\n                    })\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n                    setCart(res.data.cart)\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n            getUser()\r\n        }\r\n    }, [token])\r\n\r\n\r\n    const addCart = async (product) => {\r\n        if (!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n        const check = cart.every(item => {\r\n            return item._id !== product._id\r\n        })\r\n\r\n        if (check) {\r\n            setCart([...cart, { ...product, quantity: 1 }])\r\n\r\n            await axios.patch('/user/addcart', { cart: [...cart, { ...product, quantity: 1 }] }, {\r\n                headers: { Authorization: token }\r\n            })\r\n\r\n        } else {\r\n            alert(\"This product has been added to cart.\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        cart: [cart, setCart],\r\n        addCart: addCart,\r\n        history: [history, setHistory],\r\n        user: [user, setUser]\r\n    }\r\n}\r\n\r\nexport default UserAPI"]},"metadata":{},"sourceType":"module"}